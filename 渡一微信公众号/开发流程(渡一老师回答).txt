从接到任务，到任务完成，开发人员一般要经历五个阶段

第一个阶段：确定资源可用性
这里的资源包括很多，必须基本的工具，电脑啊，开发工具啊，开发环境啊之类的。不要觉得这些太普通，很多公司的项目不允许连接外网，所以一定要确定基本工具
资源不只是物质上的，还有人力上的，必须美工支持（做网站得有图啊，没有图会被阻塞）。还有数据需要其他人支持，得确定接口可用性。

API对接人题目中给出了，所以要找他确定接口可用的时间。因为很有可能这个人在这个时候正在进行开发，不能在第一时间给出支持，只要他给出的接口时间在合理的时间范围内，你都需要根据各方给出的时间不同来设置自己的开发顺序（前提是这些顺序是可以交换的）。

最开始的阶段就是检查硬件设备以及联系各方资源，看看是否到位，如果不到位或者有风险一定要上报。


第二个阶段是确定接口、
一个项目的开发几乎不会是自己来完成，几乎都是要多方协作的，既然是多方协作，必然得有各自负责的业务边界，在边界处，双方交互的确定性和稳定性决定这未来这里隐患程度的大小
所以一定要和API提供方确定好接口，千万不要出现开发到某个地方的时候，发现API提供方给出的接口不满足要求。这个时候如果再提，API提供方就需要时间修改，可能项目就会延期了。


第三个阶段就是设计和开发
一定要先设计，后开发。很多大公司讲七分设计，三分开发。
就是设计阶段会花费大量的时间，把项目清楚的分解成很多小的模块之后再逐一进行开发。
开发阶段代码要留有一定的注释。


第四个阶段是自测阶段
自己写的代码要自己进行测试。
自己来模拟数据和调用接口，来看会不会报错。自己模拟数据在测试中的术语叫做写“桩模块”，自己写调用接口在测试中叫写“驱动模块”。


第五个阶段是联调阶段，联调有两个类型，一个是和你的API提供方进行联调。一个是和你的调用方进行联调。
当然，如果你处于系统调用链的顶端或者尾端可能会只有一个连接方。
联调之后就可以提测了。将工作转给QA（测试）
发现时间不充足可以提出风险
依然不给拨出时间，出现问题责任方不完全在你。
如果省略自测步骤，就要承担全责。
在尽最大能力完成业务的同时，保护自己。